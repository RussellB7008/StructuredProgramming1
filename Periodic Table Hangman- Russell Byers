Python 3.2.2 (default, Sep  4 2011, 09:51:08) [MSC v.1500 32 bit (Intel)] on win32
Type "copyright", "credits" or "license()" for more information.
>>> #!/usr/bin/env python3
>>> from random import *
>>> player_score = 0
>>> computer_score = 0
>>> def hangedman(hangman):
	graphic = [
		"""
		+------+
		|
		|
		|
		|
		|
		==========
		""",
		"""
		+------+
		|      |
		|      0
		|
		|
		|
		==========
		""",
		"""
		+------+
		|      |
		|      0
		|      |
		|
		|
		==========
		""",
		"""
		+------+
		|      |
		|      0
		|     -|
		|
		|
		==========
		""",
		"""
		+------+
		|      |
		|      0
		|     -|-
		|
		|
		==========
		""",
		"""
		+------+
		|      |
		|      0
		|     -|-
		|     |
		|
		==========
		""",
		"""
		+------+
		|      |
		|      0
		|     -|-
		|     | |
		|
		==========
		"""]
	print (graphic[hangman])
	return

>>> def start():
	print("Let's play a game of hangman.")
	while game():
		pass
	scores()

	
>>> def game():
	dictionary = ["hydrogen", "helium", "lithium", "beryllium", "boron", "carbon", "nitrogen", "oxygen", "fluorine", "neon", "sodium", "magnesium", "aluminum", "silicon", "phosphorous", "sulfur", "chlorine", "argon", "potassium", "calcium", "scandium", "titanium", "vanadium", "chromium", "manganese", "iron", "cobal;t", "nickel", "copper", "zinc", "gallium", "germanium", "arsenic", "selenium", "bromine", "krypton", "rubidium", "strontium", "yttrium", "zirconium", "niobium", "molybdenum", "technetium", "ruthenium", "rhodium", "palladium", "silver", "cadmium", "indium", "tin", "antimony", "tellurium", "iodine", "xenon", "cesium", "barium", "hafnium", "tantalum", "tungsten", "rhenium", "osmium", "iridium", "platinum", "gold", "mercury", "thallium", "lead", "bismuth", "polonium", "astatine", "radon", "francium", "radium", "rutherfordium", "dubnium", "seaborgium", "bohrium", "hassium", "meitnerium", "darmstadium", "roentgenium", "copernicium", "nihonium", "flerovium", "moscovium", "livermorium", "tennessine", "oganesson", "lanthanum", "cerium", "praseodymium", "neodymium", "promethium", "samarium", "europium", "terbium", "gadolinium", "dysprosium", "holmium", "erbium", "thulium", "ytterbium", "lutetium", "actinium", "thorium", "protactinium", "uranium", "neptunium", "plutonium", "americium", "curium", "berkelium", "californium", "einsteinium", "fermium", "mendelevium", "nobelium", "lawrencium"]
	word = choice(dictionary)
	word_length = len(word)
	clue = word_length * ["_"]
	tries = 6
	letters_tried = ""
	guesses = 0
	letters_right = 0
	letters_wrong = 0
	global computer_score, player_score
	while (letters_wrong != tries) and ("".join(clue) != word):
		letter=guess_letter()
		if len(letter) == 1 and letter.isalpha():
			if letters_tried.find(letter) != -1:
				print("You've already picked", letter)
			else:
				letters_tried = letters_tried + letter
				first_index = word.find(letter)
				if first_index == -1:
					letters_wrong +=1
					print ("Sorry,",letter,"isn't what we're looking for.")
				else:
					print("Congratulations,",letter,"is correct.")
					for i in range(word_length):
						if letter == word[i]:
							clue[i] = letter
		else:
			print("Choose another.")
		hangedman(letters_wrong)
		print(" ".join(clue))
		print ("Guesses: ", letters_tried)
		if letters_wrong == tries:
			print("Game Over.")
			print("The word was",word)
			computer_score += 1
			break
		if "".join(clue) == word:
			print("You Win!")
			print("The word was",word)
			player_score += 1
			break
	return play_again()

>>> def guess_letter():
	print
	letter = input("Take a guess at our mystery word: ")
	letter.strip()
	letter.lower()
	print
	return letter

>>> def play_again():
	answer = input("Would you like to play again? y/n: ")
	if answer in ('y', "Y", "yes", "Yes", "Of course!"):
		return answer
	else:
		print("Thank you very much for playing. See you next time!")

		
>>> def scores():
	global player_score, computer_score
	print("HIGH SCORES")
	print("Player: ", player_score)
	print("Computer: ", computer_score)

	
>>> if __name__ == '__main__':
	start()
